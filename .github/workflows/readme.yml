# Simple workflow for deploying static content to GitHub Pages
name: Update README.md

on:
    # Allows running this workflow from other workflows
    workflow_call:

    # Allows running this workflow from GitHub Actions tab
    workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
    contents: read
    id-token: write

jobs:
    update-readme:
        name: Update readme file
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Update files
              id: update
              run: |
                  export PYTHONPATH=$PYTHONPATH:$(pwd)/src/
                  python3 -m resumake.builder -h >./src/resources/usage.txt
                  README_CHANGED=$(git diff ./src/resources/usage.txt | grep txt | head -n 1)
                  UPDATE=$(python3 -c "print(str('${README_CHANGED}'.endswith('usage.txt')).lower())")
                  if [[ $UPDATE == "true" ]]; then
                      echo "Updating README usage text..."
                      cat ./src/resources/readme-p1.md ./src/resources/usage.txt ./src/resources/readme-p2.md >README.md
                      echo "README usage text updated."
                  else
                      echo "README usage text unchanged."
                  fi
                  echo "changed=${UPDATE}" >> "${GITHUB_OUTPUT}"
            - name: Commit changes
              if: steps.update.outputs.changed == 'true'
              run: |
                  git config --local user.name "github-actions[bot]"
                  git config --local user.email "github-actions[bot]@users.noreply.github.com"
                  git add ./src/resources/usage.txt
                  git add README.md
                  git commit -m "pipeline: update readme"
            - name: Push to repository
              if: steps.update.outputs.changed == 'true'
              uses: ad-m/github-push-action@master
              with:
                  branch: main
                  github_token: ${{ secrets.GITHUB_TOKEN }}
